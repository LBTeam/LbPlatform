<UserControl x:Class="LBManager.ScreenListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LBManager"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:mycontrol="http://lbmanager.net/winfx/xaml/controls"
             xmlns:params="http://schemas.codeplex.com/elysium/params"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <DataGrid  ItemsSource="{Binding ScreenList}" 
                   AutoGenerateColumns="False"
                   VerticalContentAlignment="Center"
                   Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}">
            <!--materialDesign:DataGridAssist.CellPadding="13 8 8 8"
                   materialDesign:DataGridAssist.ColumnHeaderPadding="8"-->
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Name}" Width="*"
                                            Header="名称"
                                           /> <!--EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"-->
                <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                <materialDesign:MaterialDataGridTextColumn Binding="{Binding Width}" Width="*"
                                                        Header="Width"   
                                                        />
                <!-- set a max length to get an indicator in the editor -->
                <materialDesign:MaterialDataGridTextColumn Binding="{Binding PixelsWidth}" Width="*"
                                                        Header="PixelsWidth" 
                                                        />
                <materialDesign:MaterialDataGridComboBoxColumn Header="­Plan" 
                                                               DisplayMemberPath="FileName"
                                                               SelectedItemBinding="{Binding SelectedScheduleFile, UpdateSourceTrigger=PropertyChanged}"
                                                               ItemsSourceBinding="{Binding ScheduleList.ScheduleFileInfoList}" />
                
                <DataGridTemplateColumn Header=""
                                        Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <mycontrol:ExpanderMenu IsExpanded="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}">
                                    <mycontrol:ExpanderMenuItem Style="{StaticResource PublishExpanderMenuItemStyle}" Command="{Binding PublishScheduleCommand}"/>
                                    <mycontrol:ExpanderMenuItem Style="{StaticResource PreviewExpanderMenuItemStyle}" Command="{Binding PreviewScheduleCommand}"/>
                                </mycontrol:ExpanderMenu>

                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
